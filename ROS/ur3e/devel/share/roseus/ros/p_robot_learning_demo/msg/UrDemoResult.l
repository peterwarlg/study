;; Auto-generated. Do not edit!


(when (boundp 'p_robot_learning_demo::UrDemoResult)
  (if (not (find-package "P_ROBOT_LEARNING_DEMO"))
    (make-package "P_ROBOT_LEARNING_DEMO"))
  (shadow 'UrDemoResult (find-package "P_ROBOT_LEARNING_DEMO")))
(unless (find-package "P_ROBOT_LEARNING_DEMO::URDEMORESULT")
  (make-package "P_ROBOT_LEARNING_DEMO::URDEMORESULT"))

(in-package "ROS")
;;//! \htmlinclude UrDemoResult.msg.html


(defclass p_robot_learning_demo::UrDemoResult
  :super ros::object
  :slots (_action_done _rurpos _rf1 ))

(defmethod p_robot_learning_demo::UrDemoResult
  (:init
   (&key
    ((:action_done __action_done) 0)
    ((:rurpos __rurpos) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:rf1 __rf1) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _action_done (round __action_done))
   (setq _rurpos __rurpos)
   (setq _rf1 __rf1)
   self)
  (:action_done
   (&optional __action_done)
   (if __action_done (setq _action_done __action_done)) _action_done)
  (:rurpos
   (&optional __rurpos)
   (if __rurpos (setq _rurpos __rurpos)) _rurpos)
  (:rf1
   (&optional __rf1)
   (if __rf1 (setq _rf1 __rf1)) _rf1)
  (:serialization-length
   ()
   (+
    ;; uint32 _action_done
    4
    ;; float64[] _rurpos
    (* 8    (length _rurpos)) 4
    ;; float64[] _rf1
    (* 8    (length _rf1)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _action_done
       (write-long _action_done s)
     ;; float64[] _rurpos
     (write-long (length _rurpos) s)
     (dotimes (i (length _rurpos))
       (sys::poke (elt _rurpos i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; float64[] _rf1
     (write-long (length _rf1) s)
     (dotimes (i (length _rf1))
       (sys::poke (elt _rf1 i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _action_done
     (setq _action_done (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; float64[] _rurpos
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _rurpos (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _rurpos i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; float64[] _rf1
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _rf1 (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _rf1 i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;;
   self)
  )

(setf (get p_robot_learning_demo::UrDemoResult :md5sum-) "3444c2c0ad381ffdf4a9aeaec324987c")
(setf (get p_robot_learning_demo::UrDemoResult :datatype-) "p_robot_learning_demo/UrDemoResult")
(setf (get p_robot_learning_demo::UrDemoResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
uint32 action_done
float64[] rurpos
float64[] rf1

")



(provide :p_robot_learning_demo/UrDemoResult "3444c2c0ad381ffdf4a9aeaec324987c")


