;; Auto-generated. Do not edit!


(when (boundp 'p_robot_learning_demo::UrDemoGoal)
  (if (not (find-package "P_ROBOT_LEARNING_DEMO"))
    (make-package "P_ROBOT_LEARNING_DEMO"))
  (shadow 'UrDemoGoal (find-package "P_ROBOT_LEARNING_DEMO")))
(unless (find-package "P_ROBOT_LEARNING_DEMO::URDEMOGOAL")
  (make-package "P_ROBOT_LEARNING_DEMO::URDEMOGOAL"))

(in-package "ROS")
;;//! \htmlinclude UrDemoGoal.msg.html


(defclass p_robot_learning_demo::UrDemoGoal
  :super ros::object
  :slots (_action_id _mode_id _urpos _gripper_val ))

(defmethod p_robot_learning_demo::UrDemoGoal
  (:init
   (&key
    ((:action_id __action_id) 0)
    ((:mode_id __mode_id) 0)
    ((:urpos __urpos) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:gripper_val __gripper_val) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _action_id (round __action_id))
   (setq _mode_id (round __mode_id))
   (setq _urpos __urpos)
   (setq _gripper_val __gripper_val)
   self)
  (:action_id
   (&optional __action_id)
   (if __action_id (setq _action_id __action_id)) _action_id)
  (:mode_id
   (&optional __mode_id)
   (if __mode_id (setq _mode_id __mode_id)) _mode_id)
  (:urpos
   (&optional __urpos)
   (if __urpos (setq _urpos __urpos)) _urpos)
  (:gripper_val
   (&optional __gripper_val)
   (if __gripper_val (setq _gripper_val __gripper_val)) _gripper_val)
  (:serialization-length
   ()
   (+
    ;; uint32 _action_id
    4
    ;; uint32 _mode_id
    4
    ;; float64[] _urpos
    (* 8    (length _urpos)) 4
    ;; float64[] _gripper_val
    (* 8    (length _gripper_val)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _action_id
       (write-long _action_id s)
     ;; uint32 _mode_id
       (write-long _mode_id s)
     ;; float64[] _urpos
     (write-long (length _urpos) s)
     (dotimes (i (length _urpos))
       (sys::poke (elt _urpos i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; float64[] _gripper_val
     (write-long (length _gripper_val) s)
     (dotimes (i (length _gripper_val))
       (sys::poke (elt _gripper_val i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _action_id
     (setq _action_id (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; uint32 _mode_id
     (setq _mode_id (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; float64[] _urpos
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _urpos (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _urpos i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; float64[] _gripper_val
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _gripper_val (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _gripper_val i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;;
   self)
  )

(setf (get p_robot_learning_demo::UrDemoGoal :md5sum-) "3e2e647b480d85b93a63fd7219d610b0")
(setf (get p_robot_learning_demo::UrDemoGoal :datatype-) "p_robot_learning_demo/UrDemoGoal")
(setf (get p_robot_learning_demo::UrDemoGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
uint32 action_id  # Specify which dishwasher we want to use
uint32 mode_id
float64[] urpos
float64[] gripper_val

")



(provide :p_robot_learning_demo/UrDemoGoal "3e2e647b480d85b93a63fd7219d610b0")


