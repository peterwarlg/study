;; Auto-generated. Do not edit!


(when (boundp 'p_robot_learning_demo::UrDemoFeedback)
  (if (not (find-package "P_ROBOT_LEARNING_DEMO"))
    (make-package "P_ROBOT_LEARNING_DEMO"))
  (shadow 'UrDemoFeedback (find-package "P_ROBOT_LEARNING_DEMO")))
(unless (find-package "P_ROBOT_LEARNING_DEMO::URDEMOFEEDBACK")
  (make-package "P_ROBOT_LEARNING_DEMO::URDEMOFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude UrDemoFeedback.msg.html


(defclass p_robot_learning_demo::UrDemoFeedback
  :super ros::object
  :slots (_percent_complete _urposf _f1 ))

(defmethod p_robot_learning_demo::UrDemoFeedback
  (:init
   (&key
    ((:percent_complete __percent_complete) 0.0)
    ((:urposf __urposf) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:f1 __f1) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _percent_complete (float __percent_complete))
   (setq _urposf __urposf)
   (setq _f1 __f1)
   self)
  (:percent_complete
   (&optional __percent_complete)
   (if __percent_complete (setq _percent_complete __percent_complete)) _percent_complete)
  (:urposf
   (&optional __urposf)
   (if __urposf (setq _urposf __urposf)) _urposf)
  (:f1
   (&optional __f1)
   (if __f1 (setq _f1 __f1)) _f1)
  (:serialization-length
   ()
   (+
    ;; float32 _percent_complete
    4
    ;; float64[] _urposf
    (* 8    (length _urposf)) 4
    ;; float64[] _f1
    (* 8    (length _f1)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _percent_complete
       (sys::poke _percent_complete (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float64[] _urposf
     (write-long (length _urposf) s)
     (dotimes (i (length _urposf))
       (sys::poke (elt _urposf i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; float64[] _f1
     (write-long (length _f1) s)
     (dotimes (i (length _f1))
       (sys::poke (elt _f1 i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _percent_complete
     (setq _percent_complete (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float64[] _urposf
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _urposf (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _urposf i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; float64[] _f1
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _f1 (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _f1 i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;;
   self)
  )

(setf (get p_robot_learning_demo::UrDemoFeedback :md5sum-) "e39a61614b37725ac045743ec1a3657c")
(setf (get p_robot_learning_demo::UrDemoFeedback :datatype-) "p_robot_learning_demo/UrDemoFeedback")
(setf (get p_robot_learning_demo::UrDemoFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
float32 percent_complete
float64[] urposf
float64[] f1


")



(provide :p_robot_learning_demo/UrDemoFeedback "e39a61614b37725ac045743ec1a3657c")


